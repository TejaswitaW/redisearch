Get all the movies
> FT.SEARCH idx:movie "*" LIMIT 0 0
Gives total number of records in your redis database

Group all movies by each year
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @release_year

Group all movies by each year and category
> FT.AGGREGATE idx:movie "*" GROUPBY 2 @release_year @category

Get total number of movies by each year
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @release_year reduce count 0 

Get total number of movies by each year
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @release_year reduce count 0 AS total_num_movies

Get all movies by each year where it contains "heat"
> FT.AGGREGATE idx:movie "heat" GROUPBY 1 @release_year reduce count 0 AS total_num_movies

Get all movies by each year from the most recent to oldest
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @release_year reduce count 0 AS total_num_movies SORTBY 2 @release_year DESC

Get total number of movies by each category, with total number of votes and average rating
Step 1: FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies 
Step 2: FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies REDUCE SUM 1 votes AS total_votes
(There was no index done in votes so got error, solution is alter schema)
FT.ALTER idx:movie SCHEMA ADD votes NUMERIC SORTABLE
Step 3: FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies REDUCE SUM 1 votes AS total_votes REDUCE AVG 1 rating AS avg_rating
You can do SORTBY also,
FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies REDUCE SUM 1 votes AS total_votes REDUCE AVG 1 rating AS avg_rating SORTBY 1 @avg_rating
(Here we cant take rating, because we are sorting based on average rating and avg_rating is generated by us.)
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies REDUCE SUM 1 votes AS total_votes REDUCE AVG 1 rating AS avg_rating SORTBY 2 @avg_rating DESC
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies REDUCE SUM 1 votes AS total_votes REDUCE AVG 1 rating AS avg_rating SORTBY 4 @avg_rating DESC @total_votes DESC
> FT.AGGREGATE idx:movie "*" GROUPBY 1 @category reduce count 0 AS total_movies REDUCE SUM 1 votes AS total_votes REDUCE AVG 1 rating AS avg_rating SORTBY 4 @total_votes DESC @avg_rating DESC

Get total numbers of females actors by each country and sorted by biggest to smallest number 
> FT.AGGREGATE id:users "@gender:{female}" GROUPBY 1 @country REDUCE COUNT 0 AS female_count SORTBY 2 @female_count DESC

